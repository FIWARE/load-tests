apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "orion-loadtest.fullname" . }}
  labels:
    {{ include "orion-loadtest.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "orion-loadtest.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        {{ include "orion-loadtest.labels" . | nindent 8 }}
        {{- with .Values.collector.additionalLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- if .Values.collector.additionalAnnotations -}}
      annotations:
        {{- with .Values.collector.additionalAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
    spec:
      serviceAccountName: fiware-root-runner
      serviceAccount: fiware-root-runner
      securityContext:
        runAsUser: 0
      volumes:
        - name: shared-results
          emptyDir: { }
      containers:
        - name: {{ .Chart.Name }}
          imagePullPolicy: {{ .Values.collector.image.pullPolicy }}
          image: "{{ .Values.collector.image.repository }}:{{ .Values.collector.image.tag }}"
          securityContext:
            privileged: true
          ports:
            - name: ftp
              containerPort: {{ .Values.collector.port}}
              protocol: TCP
            {{- range untilStep 21000 21011 1 }}
            - containerPort: {{ . }}
              protocol: TCP
              name: ftp-{{ . }}
            {{- end }}
          env:
            - name: ADDRESS
              value: {{ include "orion-loadtest.fullname" . }}
            - name: USERS
              value: "{{ .Values.collector.username }}|{{ .Values.collector.password }}|{{ .Values.collector.resultFolder }}"
          resources:
            {{- toYaml .Values.collector.resources | nindent 12 }}
          volumeMounts:
            - name: shared-results
              mountPath: /{{ .Values.collector.resultFolder }}
        - name: {{ .Chart.Name }}-aggregation-sidecar
          imagePullPolicy: {{ .Values.aggregation.image.pullPolicy }}
          image: "{{ .Values.aggregation.image.repository }}:{{ .Values.aggregation.image.tag }}"
          command: [ "watch", "-n 10", "mvn", "gatling-aggregation:aggregate", "-DreportsFolder={{ .Values.collector.resultFolder }}"]
          volumeMounts:
            - name: shared-results
              mountPath: {{ .Values.collector.resultFolder }}
        - name: {{ .Chart.Name }}-result-server
          image: halverneus/static-file-server
          imagePullPolicy: IfNotPresent
          env:
            - name: FOLDER
              value: "{{ .Values.collector.resultFolder }}"
            - name: PORT
              value: "8080"
            - name: DEBUG
              value: "true"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: shared-results
              mountPath: {{ .Values.collector.resultFolder }}

